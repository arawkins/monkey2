
***** Monkey2 v1.1.09 *****

Comments in bin/env_blah.txt files have changed. Comments must now span a whole line, and must begin with an apostrophe or hash. If you have modified your env files, make sure to remove any 'inline' comments, ie: comments that begin in the middile of a line somewhere. This change allows for apostrophes in env vars.

Added support for gltf2 binary files (ie: .glb files).

Added std.digest with MD5, SHA1, SHA256.

Added std.base64 with EncodeBase64 and DecodeBase64.

You can now create a DataBuffer with an existing memory block.

Merged mojo3d-physics into mojo3d.

Added "MOJO_MSAA_SAMPLES" for multisample antialiasing. On windows, need to set "MOJO_OPENGL_PROFILE" to "compatibility" too.

Added support for gltf2 animations/skins.

Added some more keycodes, eg: Key.ACBack.

Updated android studio to 3.0.1

Windows x64 support added! See MX2_ARCH_WINDOWS in env_windows.txt. Also, changed msvc tools to community editiion 2017

Use SetConfig( "MX2_MOJO_TEXTURE_MAX_ANISOTROPY",n ) to set texture max anisotropy, 0 to 16.

Nuked mojo App.Config system in favor of a simpler 'config setting' system in std.filesystem. Set SetConfig/GetConfig.

gles20 module deprecated, use opengl module instead. gles20 may or may not still work, left it in there mainly for the BlahEx funcs that people were using - please copy these into your own project.

Note: env_target.txt files in bin have CHANGED! Make sure to update your old ones if you've changed them.

Added a TextureFlags param to Font.Load.

Cleaned up animator/animation. Added transition parameter to Animator.Animate.

Added SDL GameController class. Tweaked Joystick/GameController Open logic so devices can be added/removed more cleanly. See joystick and gamecontroller samples in bananas.

Added experimental selective reflection. Use '#Reflect namepsace_path' to enable reflection for an entire namespace. Using same system as 'Using' ie: can end with '..' to 'reflect all'.


***** Monkey2 v1.1.08 *****

Added AudioDevice.PlayMusic.

Language addition: Added bool->string implicit conversion, returns "True" or "False". Note that a bool cannot be safely converted to a string and back using built-in conversions, because bool->string->bool will always return true (since string->bool returns true if string is non-null, and bool->string always returns a non-null string). A std.stringio.ParseBool function has been added to parse "True"/"False" style strings. Use this or something similar if you are parsing bools from a stream.

Language addition: Added where expressions to classes. Note that since classes can't be overloaded, class where expressions can only possibly generate errors, they can't be used to 'select' a particular overload.

Language addition: parser now allows optional newlines before primary expressions, which allows you to split long expressions over multiple lines.

Language addition: objects can now by cast to/from void ptr using the Cast<> operator.

Language addition: Elvis operator '?Else' added, eg: 'Local x:=y ?Else -1' will assign 'y' to 'x' if y is 'true', else will assign -1 to 'x'.

Language addition: Safe reference operator added, eg: 'Local x:=c.t' will assign 't' to 'x' if 'c' is not null, else will assign null to 'x'. Can simplify 'If c Then c.Blah' type stuff.

Mojo3d component system added, Animator/RigidBody/Collider now component based.

Mojo3d anisotropic texture filtering enabled, see anisotropic test.

Mojo3d Scene.EnvColor added.

Mojo3d Renderable class added.

std.permissions added, android only for now.

Implemented custom openal on macos 'coz the OS one is stuffed.


***** Monkey2 v1.1.07 *****

Android min-sdk now 14 for android projects.

Added Scene.DestroyAllEntities.

Added new 'instance' uniformblock type for better (not great yet) instancing.

Enabled assimp FBX and BLEND loaders.

Sprites now compare with depth buffer.

Added Sprite.TextureRect:Rectf property for simple 3d sprite animation.

Fixed Texture.Flags setter.

Added simple outline drawing to Canvas, see: Canvas.OutlineMode, Canvas.OutlineColor and Canvas.OutlineWidth. See chimpmunkdebugger.monkey2 in hellochipmunk banana for demo.

Implemented point light shadows using rgba depth cube texturing for webgl compatibility. Slow, needs to do some culling.

Added ParticleSystem entity subclass. A ParticleSystem contains a ParticleBuffer and a ParticleMaterial, so you can creating multiple instances of the same ParticleBuffer with different materials. See mojo3d particles test.

Added LinearColors property to UniformBlock and Renderer. Material color properties now always in sRGB space. Changed Color.Gold etc. to compensate (they were linear colors).

Added bananas showcase files. See Help->Bananas showcase.


***** Monkey2 v1.1.06 *****

* App no longer renders when minimized/inactive.

* Added 'Internal' decl visibility to mx2cc, which means a decl is only visible to other decls within the same module.

* Namespace mojo3d now uses degrees. Namespaces monkey.math and std.geom still use radians.

* Mx2cc now tries to make docs for type extensions. No way to link to 'em yet. 

* Entity Position, Basis, Scale, Matrix etc properties are now in *world* space. Use LocalPosition, LocalBasis etc for local space versions. Ditto SetPosition, Setbasis, SetScale etc methods.

* Added subclasses for RigidBody: StaticBody, DynamicBody and KinematicBody, use these with New instead of RigidBody.


***** Monkey2 v1.1.05b *****

* Fixes a number of fairly critical GC bugs. GC is more aggressive now which has turned up a few 'lurkers'.

* Mojo 2d lighting now handles windows/devices larger than 1920,1080.

* Added 3d modules!


***** Monkey2 v1.1.05 *****

* Added std.requesters.OpenUrl support for android and ios.

* Added WIP assimp and bullet modules mainly for future use by mojo3d but its nice to have standalone versions of these.

* Added tinyfiledialog library for linux requesters, except for Proceed which uses kdialog as there's no equivalent in tfd.

* Added WIP MSVC support for faster compile times on windows. To enable, use 'MX2_USE_MSVC=1' in bin/env_windows.txt and rebuild all modules.
